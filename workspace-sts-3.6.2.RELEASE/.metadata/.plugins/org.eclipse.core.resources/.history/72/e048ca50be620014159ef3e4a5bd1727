package com.packt.webstore.service.impl;

import com.packt.webstore.service.OrderService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.packt.webstore.domain.Product;
import com.packt.webstore.domain.repository.ProductRepository;


@Service
public class OrderServiceImpl implements OrderService 
{
	/**
	 * As soon as Spring sees the @Autowired annotation on top of the ProductRepository reference,
	 *  it assigns the object of InMemoryProductRepository to this reference since 
	 *  Spring already created and holds the InMemoryProductRepository object in its object 
	 *  container (the web application context).
	 * 
	 */
	@Autowired  //this gets initialised automatically - no need to do new ProductRepository();
	//InMemoryProductRepository implements ProductRepository
	private ProductRepository productRepository;
	
	
	//this method calls the method InMemoryProductRepository.getProductById - to return the correct Product object 
	//the checks there is sufficient stock - if there is change the stock levels
	public void processOrder(String productId, int count) 
	{
		Product productById = productRepository.getProductById(productId);
		
		
		if(productById.getUnitsInStock() < count)
		{
			throw new IllegalArgumentException("Out of Stock. Available Units in Stock:- " + productById.getUnitsInStock());
		}

		//remove the sum of the order from the stock quantity
		productById.setUnitsInStock(productById.getUnitsInStock() - count);
	}

}
